lang mcore

let s_len1 = newseq [ int ] ((addi 1 3))
utest 1 (seqmethod . length s_len1)

utest (newseq [ int ] ((addi 1 3))) (newseq [ int ] (4))

// Length test 2
utest 0 (seqmethod . length (newseq [ int ] ()))

// Length test 3
utest 0 (let len = seqmethod . length in len (newseq [ int ] ()))

// Push test 1
//utest (newseq [int] (1)) (seqmethod . push (newseq [ int ] ()) 1)

// Nth test 1
//utest 1 (seqmethod . nth (seqmethod . push (newseq [ int ] ()) 1) 0)

// Map test 1
// let double = lam x:Int. muli x 2
// utest (newseq [int] (2,4)) (seqmethod . map (double) (newseq [int] (1,2)))
